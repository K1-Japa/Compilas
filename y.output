Terminals unused in grammar

    tk_colon


State 43 conflicts: 1 shift/reduce
State 119 conflicts: 1 shift/reduce


Grammar

    0 $accept: menu $end

    1 menu: imports listFunctions

    2 imports: imports tk_import tk_openParen tk_string tk_closeParen tk_semicolon
    3        | ε

    4 listFunctions: statementFunction
    5              | listFunctions statementFunction

    6 statementFunction: nameFunction tk_openCurly code return tk_closeCurly
    7                  | main

    8 nameFunction: dataType tk_id tk_openParen listParameters tk_closeParen

    9 listParameters: dataType tk_id
   10               | listParameters tk_comma dataType tk_id
   11               | ε

   12 main: main_start tk_openCurly code return tk_closeCurly

   13 main_start: dataType tk_main tk_openParen tk_closeParen

   14 dataType: tk_typeInt
   15         | tk_typeFloat
   16         | tk_typeChar
   17         | tk_typeString
   18         | tk_void

   19 code: statement tk_semicolon
   20     | functionCall tk_semicolon
   21     | print tk_semicolon
   22     | tk_scanf tk_openParen tk_string tk_comma '&' tk_id tk_closeParen tk_semicolon
   23     | tk_if tk_openParen condition tk_closeParen tk_openCurly code tk_closeCurly else
   24     | tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly
   25     | code statement tk_semicolon
   26     | code functionCall tk_semicolon
   27     | code print tk_semicolon
   28     | code tk_scanf tk_openParen tk_string tk_comma '&' tk_id tk_closeParen tk_semicolon
   29     | code tk_if tk_openParen condition tk_closeParen tk_openCurly code tk_closeCurly else
   30     | code tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly

   31 print: tk_print tk_openParen printString tk_closeParen

   32 printString: tk_string
   33            | tk_string tk_comma args

   34 args: tk_id
   35     | args tk_comma tk_id
   36     | ε

   37 functionCall: tk_id tk_openParen tk_closeParen
   38             | tk_id tk_openParen args tk_closeParen

   39 condition: value tk_opLog value
   40          | tk_true
   41          | tk_false
   42          | ε

   43 else: tk_else tk_openCurly code tk_closeCurly
   44     | ε

   45 statement: dataType tk_id init
   46          | array init
   47          | tk_id tk_atrib expression

   48 init: tk_atrib value
   49     | ε

   50 array: dataType tk_vet tk_id tk_openBracket tk_int tk_closeBracket

   51 value: tk_int
   52      | tk_float
   53      | tk_char
   54      | tk_id
   55      | tk_id tk_openBracket expression tk_closeBracket

   56 return: tk_return value tk_semicolon
   57       | ε

   58 expression: expression tk_opMath expression
   59           | value


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 22 28
    error (256)
    tk_void (258) 18
    tk_int <ObjNod> (259) 50 51
    tk_float <ObjNod> (260) 52
    tk_char <ObjNod> (261) 53
    tk_string <ObjNod> (262) 2 22 28 32 33
    tk_typeInt <ObjNod> (263) 14
    tk_typeFloat <ObjNod> (264) 15
    tk_typeChar <ObjNod> (265) 16
    tk_typeString <ObjNod> (266) 17
    tk_vet <ObjNod> (267) 50
    tk_if <ObjNod> (268) 23 29
    tk_for <ObjNod> (269) 24 30
    tk_print <ObjNod> (270) 31
    tk_scanf <ObjNod> (271) 22 28
    tk_main <ObjNod> (272) 13
    tk_atrib <ObjNod> (273) 47 48
    tk_opMath <ObjNod> (274) 58
    tk_opLog <ObjNod> (275) 39
    tk_openParen <ObjNod> (276) 2 8 13 22 23 24 28 29 30 31 37 38
    tk_closeParen <ObjNod> (277) 2 8 13 22 23 24 28 29 30 31 37 38
    tk_openBracket <ObjNod> (278) 50 55
    tk_closeBracket <ObjNod> (279) 50 55
    tk_openCurly <ObjNod> (280) 6 12 23 24 29 30 43
    tk_closeCurly <ObjNod> (281) 6 12 23 24 29 30 43
    tk_colon <ObjNod> (282)
    tk_semicolon <ObjNod> (283) 2 19 20 21 22 24 25 26 27 28 30 56
    tk_comma <ObjNod> (284) 10 22 28 33 35
    tk_id <ObjNod> (285) 8 9 10 22 28 34 35 37 38 45 47 50 54 55
    tk_import <ObjNod> (286) 2
    tk_true <ObjNod> (287) 40
    tk_false <ObjNod> (288) 41
    tk_else <ObjNod> (289) 43
    tk_return <ObjNod> (290) 56


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    menu <ObjNod> (38)
        on left: 1
        on right: 0
    imports <ObjNod> (39)
        on left: 2 3
        on right: 1 2
    listFunctions <ObjNod> (40)
        on left: 4 5
        on right: 1 5
    statementFunction <ObjNod> (41)
        on left: 6 7
        on right: 4 5
    nameFunction <ObjNod> (42)
        on left: 8
        on right: 6
    listParameters <ObjNod> (43)
        on left: 9 10 11
        on right: 8 10
    main <ObjNod> (44)
        on left: 12
        on right: 7
    main_start <ObjNod> (45)
        on left: 13
        on right: 12
    dataType <ObjNod> (46)
        on left: 14 15 16 17 18
        on right: 8 9 10 13 45 50
    code <ObjNod> (47)
        on left: 19 20 21 22 23 24 25 26 27 28 29 30
        on right: 6 12 23 24 25 26 27 28 29 30 43
    print <ObjNod> (48)
        on left: 31
        on right: 21 27
    printString <ObjNod> (49)
        on left: 32 33
        on right: 31
    args <ObjNod> (50)
        on left: 34 35 36
        on right: 33 35 38
    functionCall <ObjNod> (51)
        on left: 37 38
        on right: 20 26
    condition <ObjNod> (52)
        on left: 39 40 41 42
        on right: 23 24 29 30
    else <ObjNod> (53)
        on left: 43 44
        on right: 23 29
    statement <ObjNod> (54)
        on left: 45 46 47
        on right: 19 24 25 30
    init <ObjNod2> (55)
        on left: 48 49
        on right: 45 46
    array <ObjNod> (56)
        on left: 50
        on right: 46
    value <ObjNod2> (57)
        on left: 51 52 53 54 55
        on right: 39 48 56 59
    return <ObjNod> (58)
        on left: 56 57
        on right: 6 12
    expression <ObjNod2> (59)
        on left: 58 59
        on right: 47 55 58


State 0

    0 $accept: • menu $end

    $default  reduce using rule 3 (imports)

    menu     go to state 1
    imports  go to state 2


State 1

    0 $accept: menu • $end

    $end  shift, and go to state 3


State 2

    1 menu: imports • listFunctions
    2 imports: imports • tk_import tk_openParen tk_string tk_closeParen tk_semicolon

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_import      shift, and go to state 9

    listFunctions      go to state 10
    statementFunction  go to state 11
    nameFunction       go to state 12
    main               go to state 13
    main_start         go to state 14
    dataType           go to state 15


State 3

    0 $accept: menu $end •

    $default  accept


State 4

   18 dataType: tk_void •

    $default  reduce using rule 18 (dataType)


State 5

   14 dataType: tk_typeInt •

    $default  reduce using rule 14 (dataType)


State 6

   15 dataType: tk_typeFloat •

    $default  reduce using rule 15 (dataType)


State 7

   16 dataType: tk_typeChar •

    $default  reduce using rule 16 (dataType)


State 8

   17 dataType: tk_typeString •

    $default  reduce using rule 17 (dataType)


State 9

    2 imports: imports tk_import • tk_openParen tk_string tk_closeParen tk_semicolon

    tk_openParen  shift, and go to state 16


State 10

    1 menu: imports listFunctions •
    5 listFunctions: listFunctions • statementFunction

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8

    $default  reduce using rule 1 (menu)

    statementFunction  go to state 17
    nameFunction       go to state 12
    main               go to state 13
    main_start         go to state 14
    dataType           go to state 15


State 11

    4 listFunctions: statementFunction •

    $default  reduce using rule 4 (listFunctions)


State 12

    6 statementFunction: nameFunction • tk_openCurly code return tk_closeCurly

    tk_openCurly  shift, and go to state 18


State 13

    7 statementFunction: main •

    $default  reduce using rule 7 (statementFunction)


State 14

   12 main: main_start • tk_openCurly code return tk_closeCurly

    tk_openCurly  shift, and go to state 19


State 15

    8 nameFunction: dataType • tk_id tk_openParen listParameters tk_closeParen
   13 main_start: dataType • tk_main tk_openParen tk_closeParen

    tk_main  shift, and go to state 20
    tk_id    shift, and go to state 21


State 16

    2 imports: imports tk_import tk_openParen • tk_string tk_closeParen tk_semicolon

    tk_string  shift, and go to state 22


State 17

    5 listFunctions: listFunctions statementFunction •

    $default  reduce using rule 5 (listFunctions)


State 18

    6 statementFunction: nameFunction tk_openCurly • code return tk_closeCurly

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_if          shift, and go to state 23
    tk_for         shift, and go to state 24
    tk_print       shift, and go to state 25
    tk_scanf       shift, and go to state 26
    tk_id          shift, and go to state 27

    dataType      go to state 28
    code          go to state 29
    print         go to state 30
    functionCall  go to state 31
    statement     go to state 32
    array         go to state 33


State 19

   12 main: main_start tk_openCurly • code return tk_closeCurly

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_if          shift, and go to state 23
    tk_for         shift, and go to state 24
    tk_print       shift, and go to state 25
    tk_scanf       shift, and go to state 26
    tk_id          shift, and go to state 27

    dataType      go to state 28
    code          go to state 34
    print         go to state 30
    functionCall  go to state 31
    statement     go to state 32
    array         go to state 33


State 20

   13 main_start: dataType tk_main • tk_openParen tk_closeParen

    tk_openParen  shift, and go to state 35


State 21

    8 nameFunction: dataType tk_id • tk_openParen listParameters tk_closeParen

    tk_openParen  shift, and go to state 36


State 22

    2 imports: imports tk_import tk_openParen tk_string • tk_closeParen tk_semicolon

    tk_closeParen  shift, and go to state 37


State 23

   23 code: tk_if • tk_openParen condition tk_closeParen tk_openCurly code tk_closeCurly else

    tk_openParen  shift, and go to state 38


State 24

   24 code: tk_for • tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_openParen  shift, and go to state 39


State 25

   31 print: tk_print • tk_openParen printString tk_closeParen

    tk_openParen  shift, and go to state 40


State 26

   22 code: tk_scanf • tk_openParen tk_string tk_comma '&' tk_id tk_closeParen tk_semicolon

    tk_openParen  shift, and go to state 41


State 27

   37 functionCall: tk_id • tk_openParen tk_closeParen
   38             | tk_id • tk_openParen args tk_closeParen
   47 statement: tk_id • tk_atrib expression

    tk_atrib      shift, and go to state 42
    tk_openParen  shift, and go to state 43


State 28

   45 statement: dataType • tk_id init
   50 array: dataType • tk_vet tk_id tk_openBracket tk_int tk_closeBracket

    tk_vet  shift, and go to state 44
    tk_id   shift, and go to state 45


State 29

    6 statementFunction: nameFunction tk_openCurly code • return tk_closeCurly
   25 code: code • statement tk_semicolon
   26     | code • functionCall tk_semicolon
   27     | code • print tk_semicolon
   28     | code • tk_scanf tk_openParen tk_string tk_comma '&' tk_id tk_closeParen tk_semicolon
   29     | code • tk_if tk_openParen condition tk_closeParen tk_openCurly code tk_closeCurly else
   30     | code • tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_if          shift, and go to state 46
    tk_for         shift, and go to state 47
    tk_print       shift, and go to state 25
    tk_scanf       shift, and go to state 48
    tk_id          shift, and go to state 27
    tk_return      shift, and go to state 49

    $default  reduce using rule 57 (return)

    dataType      go to state 28
    print         go to state 50
    functionCall  go to state 51
    statement     go to state 52
    array         go to state 33
    return        go to state 53


State 30

   21 code: print • tk_semicolon

    tk_semicolon  shift, and go to state 54


State 31

   20 code: functionCall • tk_semicolon

    tk_semicolon  shift, and go to state 55


State 32

   19 code: statement • tk_semicolon

    tk_semicolon  shift, and go to state 56


State 33

   46 statement: array • init

    tk_atrib  shift, and go to state 57

    $default  reduce using rule 49 (init)

    init  go to state 58


State 34

   12 main: main_start tk_openCurly code • return tk_closeCurly
   25 code: code • statement tk_semicolon
   26     | code • functionCall tk_semicolon
   27     | code • print tk_semicolon
   28     | code • tk_scanf tk_openParen tk_string tk_comma '&' tk_id tk_closeParen tk_semicolon
   29     | code • tk_if tk_openParen condition tk_closeParen tk_openCurly code tk_closeCurly else
   30     | code • tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_if          shift, and go to state 46
    tk_for         shift, and go to state 47
    tk_print       shift, and go to state 25
    tk_scanf       shift, and go to state 48
    tk_id          shift, and go to state 27
    tk_return      shift, and go to state 49

    $default  reduce using rule 57 (return)

    dataType      go to state 28
    print         go to state 50
    functionCall  go to state 51
    statement     go to state 52
    array         go to state 33
    return        go to state 59


State 35

   13 main_start: dataType tk_main tk_openParen • tk_closeParen

    tk_closeParen  shift, and go to state 60


State 36

    8 nameFunction: dataType tk_id tk_openParen • listParameters tk_closeParen

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8

    $default  reduce using rule 11 (listParameters)

    listParameters  go to state 61
    dataType        go to state 62


State 37

    2 imports: imports tk_import tk_openParen tk_string tk_closeParen • tk_semicolon

    tk_semicolon  shift, and go to state 63


State 38

   23 code: tk_if tk_openParen • condition tk_closeParen tk_openCurly code tk_closeCurly else

    tk_int    shift, and go to state 64
    tk_float  shift, and go to state 65
    tk_char   shift, and go to state 66
    tk_id     shift, and go to state 67
    tk_true   shift, and go to state 68
    tk_false  shift, and go to state 69

    $default  reduce using rule 42 (condition)

    condition  go to state 70
    value      go to state 71


State 39

   24 code: tk_for tk_openParen • statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_id          shift, and go to state 72

    dataType   go to state 28
    statement  go to state 73
    array      go to state 33


State 40

   31 print: tk_print tk_openParen • printString tk_closeParen

    tk_string  shift, and go to state 74

    printString  go to state 75


State 41

   22 code: tk_scanf tk_openParen • tk_string tk_comma '&' tk_id tk_closeParen tk_semicolon

    tk_string  shift, and go to state 76


State 42

   47 statement: tk_id tk_atrib • expression

    tk_int    shift, and go to state 64
    tk_float  shift, and go to state 65
    tk_char   shift, and go to state 66
    tk_id     shift, and go to state 67

    value       go to state 77
    expression  go to state 78


State 43

   37 functionCall: tk_id tk_openParen • tk_closeParen
   38             | tk_id tk_openParen • args tk_closeParen

    tk_closeParen  shift, and go to state 79
    tk_id          shift, and go to state 80

    tk_closeParen  [reduce using rule 36 (args)]
    $default       reduce using rule 36 (args)

    args  go to state 81


State 44

   50 array: dataType tk_vet • tk_id tk_openBracket tk_int tk_closeBracket

    tk_id  shift, and go to state 82


State 45

   45 statement: dataType tk_id • init

    tk_atrib  shift, and go to state 57

    $default  reduce using rule 49 (init)

    init  go to state 83


State 46

   29 code: code tk_if • tk_openParen condition tk_closeParen tk_openCurly code tk_closeCurly else

    tk_openParen  shift, and go to state 84


State 47

   30 code: code tk_for • tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_openParen  shift, and go to state 85


State 48

   28 code: code tk_scanf • tk_openParen tk_string tk_comma '&' tk_id tk_closeParen tk_semicolon

    tk_openParen  shift, and go to state 86


State 49

   56 return: tk_return • value tk_semicolon

    tk_int    shift, and go to state 64
    tk_float  shift, and go to state 65
    tk_char   shift, and go to state 66
    tk_id     shift, and go to state 67

    value  go to state 87


State 50

   27 code: code print • tk_semicolon

    tk_semicolon  shift, and go to state 88


State 51

   26 code: code functionCall • tk_semicolon

    tk_semicolon  shift, and go to state 89


State 52

   25 code: code statement • tk_semicolon

    tk_semicolon  shift, and go to state 90


State 53

    6 statementFunction: nameFunction tk_openCurly code return • tk_closeCurly

    tk_closeCurly  shift, and go to state 91


State 54

   21 code: print tk_semicolon •

    $default  reduce using rule 21 (code)


State 55

   20 code: functionCall tk_semicolon •

    $default  reduce using rule 20 (code)


State 56

   19 code: statement tk_semicolon •

    $default  reduce using rule 19 (code)


State 57

   48 init: tk_atrib • value

    tk_int    shift, and go to state 64
    tk_float  shift, and go to state 65
    tk_char   shift, and go to state 66
    tk_id     shift, and go to state 67

    value  go to state 92


State 58

   46 statement: array init •

    $default  reduce using rule 46 (statement)


State 59

   12 main: main_start tk_openCurly code return • tk_closeCurly

    tk_closeCurly  shift, and go to state 93


State 60

   13 main_start: dataType tk_main tk_openParen tk_closeParen •

    $default  reduce using rule 13 (main_start)


State 61

    8 nameFunction: dataType tk_id tk_openParen listParameters • tk_closeParen
   10 listParameters: listParameters • tk_comma dataType tk_id

    tk_closeParen  shift, and go to state 94
    tk_comma       shift, and go to state 95


State 62

    9 listParameters: dataType • tk_id

    tk_id  shift, and go to state 96


State 63

    2 imports: imports tk_import tk_openParen tk_string tk_closeParen tk_semicolon •

    $default  reduce using rule 2 (imports)


State 64

   51 value: tk_int •

    $default  reduce using rule 51 (value)


State 65

   52 value: tk_float •

    $default  reduce using rule 52 (value)


State 66

   53 value: tk_char •

    $default  reduce using rule 53 (value)


State 67

   54 value: tk_id •
   55      | tk_id • tk_openBracket expression tk_closeBracket

    tk_openBracket  shift, and go to state 97

    $default  reduce using rule 54 (value)


State 68

   40 condition: tk_true •

    $default  reduce using rule 40 (condition)


State 69

   41 condition: tk_false •

    $default  reduce using rule 41 (condition)


State 70

   23 code: tk_if tk_openParen condition • tk_closeParen tk_openCurly code tk_closeCurly else

    tk_closeParen  shift, and go to state 98


State 71

   39 condition: value • tk_opLog value

    tk_opLog  shift, and go to state 99


State 72

   47 statement: tk_id • tk_atrib expression

    tk_atrib  shift, and go to state 42


State 73

   24 code: tk_for tk_openParen statement • tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_semicolon  shift, and go to state 100


State 74

   32 printString: tk_string •
   33            | tk_string • tk_comma args

    tk_comma  shift, and go to state 101

    $default  reduce using rule 32 (printString)


State 75

   31 print: tk_print tk_openParen printString • tk_closeParen

    tk_closeParen  shift, and go to state 102


State 76

   22 code: tk_scanf tk_openParen tk_string • tk_comma '&' tk_id tk_closeParen tk_semicolon

    tk_comma  shift, and go to state 103


State 77

   59 expression: value •

    $default  reduce using rule 59 (expression)


State 78

   47 statement: tk_id tk_atrib expression •
   58 expression: expression • tk_opMath expression

    tk_opMath  shift, and go to state 104

    $default  reduce using rule 47 (statement)


State 79

   37 functionCall: tk_id tk_openParen tk_closeParen •

    $default  reduce using rule 37 (functionCall)


State 80

   34 args: tk_id •

    $default  reduce using rule 34 (args)


State 81

   35 args: args • tk_comma tk_id
   38 functionCall: tk_id tk_openParen args • tk_closeParen

    tk_closeParen  shift, and go to state 105
    tk_comma       shift, and go to state 106


State 82

   50 array: dataType tk_vet tk_id • tk_openBracket tk_int tk_closeBracket

    tk_openBracket  shift, and go to state 107


State 83

   45 statement: dataType tk_id init •

    $default  reduce using rule 45 (statement)


State 84

   29 code: code tk_if tk_openParen • condition tk_closeParen tk_openCurly code tk_closeCurly else

    tk_int    shift, and go to state 64
    tk_float  shift, and go to state 65
    tk_char   shift, and go to state 66
    tk_id     shift, and go to state 67
    tk_true   shift, and go to state 68
    tk_false  shift, and go to state 69

    $default  reduce using rule 42 (condition)

    condition  go to state 108
    value      go to state 71


State 85

   30 code: code tk_for tk_openParen • statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_id          shift, and go to state 72

    dataType   go to state 28
    statement  go to state 109
    array      go to state 33


State 86

   28 code: code tk_scanf tk_openParen • tk_string tk_comma '&' tk_id tk_closeParen tk_semicolon

    tk_string  shift, and go to state 110


State 87

   56 return: tk_return value • tk_semicolon

    tk_semicolon  shift, and go to state 111


State 88

   27 code: code print tk_semicolon •

    $default  reduce using rule 27 (code)


State 89

   26 code: code functionCall tk_semicolon •

    $default  reduce using rule 26 (code)


State 90

   25 code: code statement tk_semicolon •

    $default  reduce using rule 25 (code)


State 91

    6 statementFunction: nameFunction tk_openCurly code return tk_closeCurly •

    $default  reduce using rule 6 (statementFunction)


State 92

   48 init: tk_atrib value •

    $default  reduce using rule 48 (init)


State 93

   12 main: main_start tk_openCurly code return tk_closeCurly •

    $default  reduce using rule 12 (main)


State 94

    8 nameFunction: dataType tk_id tk_openParen listParameters tk_closeParen •

    $default  reduce using rule 8 (nameFunction)


State 95

   10 listParameters: listParameters tk_comma • dataType tk_id

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8

    dataType  go to state 112


State 96

    9 listParameters: dataType tk_id •

    $default  reduce using rule 9 (listParameters)


State 97

   55 value: tk_id tk_openBracket • expression tk_closeBracket

    tk_int    shift, and go to state 64
    tk_float  shift, and go to state 65
    tk_char   shift, and go to state 66
    tk_id     shift, and go to state 67

    value       go to state 77
    expression  go to state 113


State 98

   23 code: tk_if tk_openParen condition tk_closeParen • tk_openCurly code tk_closeCurly else

    tk_openCurly  shift, and go to state 114


State 99

   39 condition: value tk_opLog • value

    tk_int    shift, and go to state 64
    tk_float  shift, and go to state 65
    tk_char   shift, and go to state 66
    tk_id     shift, and go to state 67

    value  go to state 115


State 100

   24 code: tk_for tk_openParen statement tk_semicolon • condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_int    shift, and go to state 64
    tk_float  shift, and go to state 65
    tk_char   shift, and go to state 66
    tk_id     shift, and go to state 67
    tk_true   shift, and go to state 68
    tk_false  shift, and go to state 69

    $default  reduce using rule 42 (condition)

    condition  go to state 116
    value      go to state 71


State 101

   33 printString: tk_string tk_comma • args

    tk_id  shift, and go to state 80

    $default  reduce using rule 36 (args)

    args  go to state 117


State 102

   31 print: tk_print tk_openParen printString tk_closeParen •

    $default  reduce using rule 31 (print)


State 103

   22 code: tk_scanf tk_openParen tk_string tk_comma • '&' tk_id tk_closeParen tk_semicolon

    '&'  shift, and go to state 118


State 104

   58 expression: expression tk_opMath • expression

    tk_int    shift, and go to state 64
    tk_float  shift, and go to state 65
    tk_char   shift, and go to state 66
    tk_id     shift, and go to state 67

    value       go to state 77
    expression  go to state 119


State 105

   38 functionCall: tk_id tk_openParen args tk_closeParen •

    $default  reduce using rule 38 (functionCall)


State 106

   35 args: args tk_comma • tk_id

    tk_id  shift, and go to state 120


State 107

   50 array: dataType tk_vet tk_id tk_openBracket • tk_int tk_closeBracket

    tk_int  shift, and go to state 121


State 108

   29 code: code tk_if tk_openParen condition • tk_closeParen tk_openCurly code tk_closeCurly else

    tk_closeParen  shift, and go to state 122


State 109

   30 code: code tk_for tk_openParen statement • tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_semicolon  shift, and go to state 123


State 110

   28 code: code tk_scanf tk_openParen tk_string • tk_comma '&' tk_id tk_closeParen tk_semicolon

    tk_comma  shift, and go to state 124


State 111

   56 return: tk_return value tk_semicolon •

    $default  reduce using rule 56 (return)


State 112

   10 listParameters: listParameters tk_comma dataType • tk_id

    tk_id  shift, and go to state 125


State 113

   55 value: tk_id tk_openBracket expression • tk_closeBracket
   58 expression: expression • tk_opMath expression

    tk_opMath        shift, and go to state 104
    tk_closeBracket  shift, and go to state 126


State 114

   23 code: tk_if tk_openParen condition tk_closeParen tk_openCurly • code tk_closeCurly else

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_if          shift, and go to state 23
    tk_for         shift, and go to state 24
    tk_print       shift, and go to state 25
    tk_scanf       shift, and go to state 26
    tk_id          shift, and go to state 27

    dataType      go to state 28
    code          go to state 127
    print         go to state 30
    functionCall  go to state 31
    statement     go to state 32
    array         go to state 33


State 115

   39 condition: value tk_opLog value •

    $default  reduce using rule 39 (condition)


State 116

   24 code: tk_for tk_openParen statement tk_semicolon condition • tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_semicolon  shift, and go to state 128


State 117

   33 printString: tk_string tk_comma args •
   35 args: args • tk_comma tk_id

    tk_comma  shift, and go to state 106

    $default  reduce using rule 33 (printString)


State 118

   22 code: tk_scanf tk_openParen tk_string tk_comma '&' • tk_id tk_closeParen tk_semicolon

    tk_id  shift, and go to state 129


State 119

   58 expression: expression • tk_opMath expression
   58           | expression tk_opMath expression •

    tk_opMath  shift, and go to state 104

    tk_opMath  [reduce using rule 58 (expression)]
    $default   reduce using rule 58 (expression)


State 120

   35 args: args tk_comma tk_id •

    $default  reduce using rule 35 (args)


State 121

   50 array: dataType tk_vet tk_id tk_openBracket tk_int • tk_closeBracket

    tk_closeBracket  shift, and go to state 130


State 122

   29 code: code tk_if tk_openParen condition tk_closeParen • tk_openCurly code tk_closeCurly else

    tk_openCurly  shift, and go to state 131


State 123

   30 code: code tk_for tk_openParen statement tk_semicolon • condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_int    shift, and go to state 64
    tk_float  shift, and go to state 65
    tk_char   shift, and go to state 66
    tk_id     shift, and go to state 67
    tk_true   shift, and go to state 68
    tk_false  shift, and go to state 69

    $default  reduce using rule 42 (condition)

    condition  go to state 132
    value      go to state 71


State 124

   28 code: code tk_scanf tk_openParen tk_string tk_comma • '&' tk_id tk_closeParen tk_semicolon

    '&'  shift, and go to state 133


State 125

   10 listParameters: listParameters tk_comma dataType tk_id •

    $default  reduce using rule 10 (listParameters)


State 126

   55 value: tk_id tk_openBracket expression tk_closeBracket •

    $default  reduce using rule 55 (value)


State 127

   23 code: tk_if tk_openParen condition tk_closeParen tk_openCurly code • tk_closeCurly else
   25     | code • statement tk_semicolon
   26     | code • functionCall tk_semicolon
   27     | code • print tk_semicolon
   28     | code • tk_scanf tk_openParen tk_string tk_comma '&' tk_id tk_closeParen tk_semicolon
   29     | code • tk_if tk_openParen condition tk_closeParen tk_openCurly code tk_closeCurly else
   30     | code • tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_if          shift, and go to state 46
    tk_for         shift, and go to state 47
    tk_print       shift, and go to state 25
    tk_scanf       shift, and go to state 48
    tk_closeCurly  shift, and go to state 134
    tk_id          shift, and go to state 27

    dataType      go to state 28
    print         go to state 50
    functionCall  go to state 51
    statement     go to state 52
    array         go to state 33


State 128

   24 code: tk_for tk_openParen statement tk_semicolon condition tk_semicolon • statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_id          shift, and go to state 72

    dataType   go to state 28
    statement  go to state 135
    array      go to state 33


State 129

   22 code: tk_scanf tk_openParen tk_string tk_comma '&' tk_id • tk_closeParen tk_semicolon

    tk_closeParen  shift, and go to state 136


State 130

   50 array: dataType tk_vet tk_id tk_openBracket tk_int tk_closeBracket •

    $default  reduce using rule 50 (array)


State 131

   29 code: code tk_if tk_openParen condition tk_closeParen tk_openCurly • code tk_closeCurly else

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_if          shift, and go to state 23
    tk_for         shift, and go to state 24
    tk_print       shift, and go to state 25
    tk_scanf       shift, and go to state 26
    tk_id          shift, and go to state 27

    dataType      go to state 28
    code          go to state 137
    print         go to state 30
    functionCall  go to state 31
    statement     go to state 32
    array         go to state 33


State 132

   30 code: code tk_for tk_openParen statement tk_semicolon condition • tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_semicolon  shift, and go to state 138


State 133

   28 code: code tk_scanf tk_openParen tk_string tk_comma '&' • tk_id tk_closeParen tk_semicolon

    tk_id  shift, and go to state 139


State 134

   23 code: tk_if tk_openParen condition tk_closeParen tk_openCurly code tk_closeCurly • else

    tk_else  shift, and go to state 140

    $default  reduce using rule 44 (else)

    else  go to state 141


State 135

   24 code: tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement • tk_closeParen tk_openCurly code tk_closeCurly

    tk_closeParen  shift, and go to state 142


State 136

   22 code: tk_scanf tk_openParen tk_string tk_comma '&' tk_id tk_closeParen • tk_semicolon

    tk_semicolon  shift, and go to state 143


State 137

   25 code: code • statement tk_semicolon
   26     | code • functionCall tk_semicolon
   27     | code • print tk_semicolon
   28     | code • tk_scanf tk_openParen tk_string tk_comma '&' tk_id tk_closeParen tk_semicolon
   29     | code • tk_if tk_openParen condition tk_closeParen tk_openCurly code tk_closeCurly else
   29     | code tk_if tk_openParen condition tk_closeParen tk_openCurly code • tk_closeCurly else
   30     | code • tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_if          shift, and go to state 46
    tk_for         shift, and go to state 47
    tk_print       shift, and go to state 25
    tk_scanf       shift, and go to state 48
    tk_closeCurly  shift, and go to state 144
    tk_id          shift, and go to state 27

    dataType      go to state 28
    print         go to state 50
    functionCall  go to state 51
    statement     go to state 52
    array         go to state 33


State 138

   30 code: code tk_for tk_openParen statement tk_semicolon condition tk_semicolon • statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_id          shift, and go to state 72

    dataType   go to state 28
    statement  go to state 145
    array      go to state 33


State 139

   28 code: code tk_scanf tk_openParen tk_string tk_comma '&' tk_id • tk_closeParen tk_semicolon

    tk_closeParen  shift, and go to state 146


State 140

   43 else: tk_else • tk_openCurly code tk_closeCurly

    tk_openCurly  shift, and go to state 147


State 141

   23 code: tk_if tk_openParen condition tk_closeParen tk_openCurly code tk_closeCurly else •

    $default  reduce using rule 23 (code)


State 142

   24 code: tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen • tk_openCurly code tk_closeCurly

    tk_openCurly  shift, and go to state 148


State 143

   22 code: tk_scanf tk_openParen tk_string tk_comma '&' tk_id tk_closeParen tk_semicolon •

    $default  reduce using rule 22 (code)


State 144

   29 code: code tk_if tk_openParen condition tk_closeParen tk_openCurly code tk_closeCurly • else

    tk_else  shift, and go to state 140

    $default  reduce using rule 44 (else)

    else  go to state 149


State 145

   30 code: code tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement • tk_closeParen tk_openCurly code tk_closeCurly

    tk_closeParen  shift, and go to state 150


State 146

   28 code: code tk_scanf tk_openParen tk_string tk_comma '&' tk_id tk_closeParen • tk_semicolon

    tk_semicolon  shift, and go to state 151


State 147

   43 else: tk_else tk_openCurly • code tk_closeCurly

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_if          shift, and go to state 23
    tk_for         shift, and go to state 24
    tk_print       shift, and go to state 25
    tk_scanf       shift, and go to state 26
    tk_id          shift, and go to state 27

    dataType      go to state 28
    code          go to state 152
    print         go to state 30
    functionCall  go to state 31
    statement     go to state 32
    array         go to state 33


State 148

   24 code: tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly • code tk_closeCurly

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_if          shift, and go to state 23
    tk_for         shift, and go to state 24
    tk_print       shift, and go to state 25
    tk_scanf       shift, and go to state 26
    tk_id          shift, and go to state 27

    dataType      go to state 28
    code          go to state 153
    print         go to state 30
    functionCall  go to state 31
    statement     go to state 32
    array         go to state 33


State 149

   29 code: code tk_if tk_openParen condition tk_closeParen tk_openCurly code tk_closeCurly else •

    $default  reduce using rule 29 (code)


State 150

   30 code: code tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen • tk_openCurly code tk_closeCurly

    tk_openCurly  shift, and go to state 154


State 151

   28 code: code tk_scanf tk_openParen tk_string tk_comma '&' tk_id tk_closeParen tk_semicolon •

    $default  reduce using rule 28 (code)


State 152

   25 code: code • statement tk_semicolon
   26     | code • functionCall tk_semicolon
   27     | code • print tk_semicolon
   28     | code • tk_scanf tk_openParen tk_string tk_comma '&' tk_id tk_closeParen tk_semicolon
   29     | code • tk_if tk_openParen condition tk_closeParen tk_openCurly code tk_closeCurly else
   30     | code • tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly
   43 else: tk_else tk_openCurly code • tk_closeCurly

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_if          shift, and go to state 46
    tk_for         shift, and go to state 47
    tk_print       shift, and go to state 25
    tk_scanf       shift, and go to state 48
    tk_closeCurly  shift, and go to state 155
    tk_id          shift, and go to state 27

    dataType      go to state 28
    print         go to state 50
    functionCall  go to state 51
    statement     go to state 52
    array         go to state 33


State 153

   24 code: tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code • tk_closeCurly
   25     | code • statement tk_semicolon
   26     | code • functionCall tk_semicolon
   27     | code • print tk_semicolon
   28     | code • tk_scanf tk_openParen tk_string tk_comma '&' tk_id tk_closeParen tk_semicolon
   29     | code • tk_if tk_openParen condition tk_closeParen tk_openCurly code tk_closeCurly else
   30     | code • tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_if          shift, and go to state 46
    tk_for         shift, and go to state 47
    tk_print       shift, and go to state 25
    tk_scanf       shift, and go to state 48
    tk_closeCurly  shift, and go to state 156
    tk_id          shift, and go to state 27

    dataType      go to state 28
    print         go to state 50
    functionCall  go to state 51
    statement     go to state 52
    array         go to state 33


State 154

   30 code: code tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly • code tk_closeCurly

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_if          shift, and go to state 23
    tk_for         shift, and go to state 24
    tk_print       shift, and go to state 25
    tk_scanf       shift, and go to state 26
    tk_id          shift, and go to state 27

    dataType      go to state 28
    code          go to state 157
    print         go to state 30
    functionCall  go to state 31
    statement     go to state 32
    array         go to state 33


State 155

   43 else: tk_else tk_openCurly code tk_closeCurly •

    $default  reduce using rule 43 (else)


State 156

   24 code: tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly •

    $default  reduce using rule 24 (code)


State 157

   25 code: code • statement tk_semicolon
   26     | code • functionCall tk_semicolon
   27     | code • print tk_semicolon
   28     | code • tk_scanf tk_openParen tk_string tk_comma '&' tk_id tk_closeParen tk_semicolon
   29     | code • tk_if tk_openParen condition tk_closeParen tk_openCurly code tk_closeCurly else
   30     | code • tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly
   30     | code tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code • tk_closeCurly

    tk_void        shift, and go to state 4
    tk_typeInt     shift, and go to state 5
    tk_typeFloat   shift, and go to state 6
    tk_typeChar    shift, and go to state 7
    tk_typeString  shift, and go to state 8
    tk_if          shift, and go to state 46
    tk_for         shift, and go to state 47
    tk_print       shift, and go to state 25
    tk_scanf       shift, and go to state 48
    tk_closeCurly  shift, and go to state 158
    tk_id          shift, and go to state 27

    dataType      go to state 28
    print         go to state 50
    functionCall  go to state 51
    statement     go to state 52
    array         go to state 33


State 158

   30 code: code tk_for tk_openParen statement tk_semicolon condition tk_semicolon statement tk_closeParen tk_openCurly code tk_closeCurly •

    $default  reduce using rule 30 (code)
